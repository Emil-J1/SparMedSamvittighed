name: Run Tests (Test Branch)

on:
  push:
    branches:
      - test
  pull_request:
    branches:
      - test
jobs:
  test:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        node-version: [18.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Set up environment variables
        run: |
          echo "GOOGLE_ID=${{ secrets.GOOGLE_ID }}" >> $GITHUB_ENV
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> $GITHUB_ENV
          echo "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}" >> $GITHUB_ENV
          echo "NEXTAUTH_URL_INTERNAL=${{ secrets.NEXTAUTH_URL_INTERNAL }}" >> $GITHUB_ENV
          echo "AUTH_SECRET=${{ secrets.AUTH_SECRET }}" >> $GITHUB_ENV
          echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> $GITHUB_ENV

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        working-directory: ./spar-med-samvittighed
        run: npm install

      - name: Run npm run build
        working-directory: ./spar-med-samvittighed
        run: npm run build

      - name: Start server
        working-directory: ./spar-med-samvittighed
        run: npm start &
        env:
          NODE_ENV: test

      - name: Wait for server to start
        run: |
          for i in {1..30}; do
            if curl -sSf http://localhost:3000 > /dev/null; then
              echo "Server is up!"
              exit 0
            fi
            echo "Waiting for server... ($i)"
            sleep 5
          done
          echo "Server did not start in time" >&2
          exit 1

      - name: Install Chrome dependencies (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            wget \
            gnupg
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
        env:
          CI: true

      - name: Install ChromeDriver (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install -y unzip xvfb libxi6 libgconf-2-4
          wget -O /tmp/chromedriver.zip https://chromedriver.storage.googleapis.com/91.0.4472.101/chromedriver_linux64.zip
          sudo unzip /tmp/chromedriver.zip chromedriver -d /usr/local/bin/
        env:
          CI: true

      - name: Run tests
        working-directory: ./spar-med-samvittighed
        run: npm test
        env:
          CI: true
          CHROME_BIN: /usr/bin/google-chrome
